@using Sandbox;
@using Sandbox.UI;
@using System;
@namespace Reprint
@inherits FactoryPanel

<root>
	<FactoryStepPanel Fact=@(this)>
		<Name>Move Cursor</Name>
		<Config>
			<div class="row" style="gap: 20px">
				<div class="col">
					<span>X</span>
					<div class="row">
						<button class="sm pressed" @onclick=@ToggleModeX>@(Fact.SetX ? "drag_handle" : (Fact.AmtX < 0 ?
							"arrow_back" : "arrow_forward"))</button>
						<span class="fixed-num">@(Fact.AmtX < 0 ? -Fact.AmtX : Fact.AmtX)</span>
					</div>
					<div style="flex-direction: row; gap: 0">
						<button class="sm" @onclick=@DecrX>chevron_left</button>
						<button class="sm" @onclick=@IncrX>chevron_right</button>
					</div>
				</div>
				<div class="col">
					<span>Y</span>
					<div class="row">
						<button class="sm pressed" @onclick=@ToggleModeY>@(Fact.SetY ? "drag_handle" : (Fact.AmtY < 0 ?
							"arrow_upward" : "arrow_downward"))</button>
						<span class="fixed-num">@(Fact.AmtY < 0 ? -Fact.AmtY : Fact.AmtY)</span>
					</div>
					<div style="flex-direction: row; gap: 0">
						<button class="sm" @onclick=@DecrY>expand_less</button>
						<button class="sm" @onclick=@IncrY>expand_more</button>
					</div>
				</div>
			</div>
		</Config>
	</FactoryStepPanel>
</root>

@code
{
	private FactoryCurs Fact { get => factory as FactoryCurs; }

	private void ToggleModeX()
	{
		if (Fact.AmtX >= 0)
		{
			if (Fact.SetX)
				Fact.SetX = false;
			else
				Fact.AmtX = -Fact.AmtX;
		}
		else
		{
			Fact.SetX = true;
		}
	}

	private void ToggleModeY()
	{
		if (Fact.AmtY >= 0)
		{
			if (Fact.SetY)
				Fact.SetY = false;
			else
				Fact.AmtY = -Fact.AmtY;
		}
		else
		{
			Fact.SetY = true;
		}
	}

	private void IncrX()
	{
		Fact.AmtX++;
	}

	private void DecrX()
	{
		Fact.AmtX--;
	}

	private void IncrY()
	{
		Fact.AmtY++;
	}

	private void DecrY()
	{
		Fact.AmtY--;
	}

	protected override FactoryStep CreateFactory() => new FactoryCurs();
	protected override int BuildHash() => HashCode.Combine(Fact.SetX, Fact.AmtX, Fact.SetY, Fact.AmtY);
}
